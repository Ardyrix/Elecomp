/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Class.Koneksi;
import Java.Connect;
import groovy.sql.DataSet;
import java.awt.BorderLayout;
import java.io.File;
import java.sql.Connection;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRDataset;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRField;
import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.JRVariable;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignDataset;
import net.sf.jasperreports.engine.design.JRDesignParameter;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JRDesignVariable;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Dii
 */
public class Laporan_Persediaan extends javax.swing.JFrame {

    /**
     * Creates new form Laporan_Persediaan
     */
    public Laporan_Persediaan() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
        cek();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        cekKelompok = new javax.swing.JCheckBox();
        cekQty = new javax.swing.JCheckBox();
        cekHJ2 = new javax.swing.JCheckBox();
        cekHJ1 = new javax.swing.JCheckBox();
        cekHPP = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 801, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Masukkan Kelompok Barang --" }));
        jComboBox1.setEnabled(false);

        cekKelompok.setText("Kelompok");
        cekKelompok.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cekKelompokItemStateChanged(evt);
            }
        });

        cekQty.setSelected(true);
        cekQty.setText("Qty");

        cekHJ2.setSelected(true);
        cekHJ2.setText("HJ2");

        cekHJ1.setSelected(true);
        cekHJ1.setText("HJ1");

        cekHPP.setSelected(true);
        cekHPP.setText("HPP");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cekHPP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cekHJ1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cekHJ2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cekQty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cekKelompok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cekKelompok)
                    .addComponent(cekQty)
                    .addComponent(cekHJ2)
                    .addComponent(cekHJ1)
                    .addComponent(cekHPP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cekKelompokItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cekKelompokItemStateChanged
        if (cekKelompok.isSelected()) {
            jComboBox1.setEnabled(true);
            loadKelompok();
        }else{
            jComboBox1.removeAllItems();
            jComboBox1.addItem("-- Masukkan Kelompok Barang --");
            //-- Masukkan Kelompok Barang --
            jComboBox1.setEnabled(false);
        }
    }//GEN-LAST:event_cekKelompokItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean statHPP, statHJ1,statHJ2,statQty;
        String query = "select 1", path_laporan = "/src/Laporan/laporan_barang_vDelta.jrxml";
        String kelompok = jComboBox1.getSelectedItem().toString();
        String cobaQuery;
        statHPP = cekHPP.isSelected();
        statHJ1 = cekHJ1.isSelected();
        statHJ2 = cekHJ2.isSelected();
        statQty = cekQty.isSelected();
        HashMap params = new HashMap<String, Object>();
        params.put("stat_hpp",statHPP);
        params.put("stat_hj1",statHJ1);
        params.put("stat_hj2",statHJ2);
        params.put("stat_qty",statQty);
        JRDesignQuery subquery = new JRDesignQuery();
        if (!kelompok.equals("-- Masukkan Kelompok Barang --")) {
            path_laporan = "/src/Laporan/laporan_barang_vDelta_kelompok.jrxml";
            cobaQuery = "SELECT b.kode_barang,\n" +
                "b.nama_barang,\n" +
                "blk.qty,\n" +
                "b.harga_beli,\n" +
                "b.komisi_harga_jual_1_barang,\n" +
                "b.komisi_harga_jual_2_barang,\n" +
                "t.jumlah\n" +
                "FROM barang b\n" +
                "JOIN top t on b.id_top=t.id_top\n" +
                "JOIN kelompok k on k.id_kelompok = b.id_kelompok\n" +
                "JOIN\n" +
                "(SELECT bl.kode_barang,\n" +
                " SUM(bl.jumlah) qty\n" +
                " FROM barang_lokasi bl\n" +
                " GROUP BY bl.kode_barang) blk\n" +
                " on blk.kode_barang = b.kode_barang\n" +
                "where k.nama_kelompok = \""+kelompok+"\"";
            subquery.setText(cobaQuery);
            params.put("kelompok", kelompok);
            
        }
        try {
            System.out.println(path_laporan+" = "+params.get("kelompok"));
            Connect koneksi = new Connect();
            Connection conn = koneksi.conn;
            JasperDesign jd =JRXmlLoader.load(new File("").getAbsolutePath()+path_laporan);
            
            JRDesignDataset jrdt = new JRDesignDataset(false);
            
            JRDataset jdt = jd.getDatasets()[0];
            
            for (JRField jrs : jdt.getFields()) {
                jrdt.addField(jrs);
            }
            for (JRParameter parameter : jrdt.getParameters()) {
                jrdt.removeParameter(parameter);
            }
            for (JRParameter jrs : jdt.getParameters()) {
                jrdt.addParameter(jrs);
            }
            for (JRVariable variable : jrdt.getVariables()) {
                jrdt.removeVariable(variable);
            }
            for (JRVariable variable : jdt.getVariables()) {
                JRDesignVariable tempJRD = new JRDesignVariable();
                
                tempJRD.setCalculation(variable.getCalculationValue());
                tempJRD.setExpression(variable.getExpression());
                tempJRD.setIncrementGroup(variable.getIncrementGroup());
                tempJRD.setIncrementType(variable.getIncrementTypeValue());

                tempJRD.setInitialValueExpression(variable.getInitialValueExpression());
                tempJRD.setName(variable.getName());
                jrdt.addVariable(tempJRD);
            }
            jrdt.setName(jdt.getName());
            jrdt.setQuery(subquery);
            jd.removeDataset(jd.getDatasets()[0]);
            jd.addDataset(jrdt);
            
            
            System.out.println(jrdt.getVariables().length);
            System.out.println(jdt.getVariables().length);
            
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(query);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint print = JasperFillManager.fillReport(jr, params,conn);
            System.out.println("Dari jd = "+jd.getQuery().getText());
            System.out.println("Dari dataset query = "+jd.getDatasets()[0].getQuery().getText());
//JasperPrintManager.printReport(print, false);
            JasperViewer viewer = new JasperViewer(print);
            System.out.println("sukses");
            
            
            jPanel2.removeAll();
            jPanel2.setLayout(new BorderLayout());
            jPanel2.repaint();
            jPanel2.add(new JRViewer(print));
////            show_report.repaint();
            jPanel2.revalidate();

        } catch (JRException ex) {
            Logger.getLogger(Laporan_Persediaan.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void setIsiDataset(){
        
    }
    
    private void loadKelompok() {
        System.out.println("Load Kelompok");
        try {
            String sql="SELECT k.nama_kelompok\n" +
                "FROM kelompok k";
            java.sql.Connection conn = (Connection) Koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                String name = res.getString(1);
                jComboBox1.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Eror" + e);
        }

    }
    private void cek(){
        
        String query = "select 1";
            loadLaporan(query);
    }
    private void loadLaporan(String query){
        try {
            Connect koneksi = new Connect();
            Connection conn = koneksi.conn;
            
            JasperDesign jd =JRXmlLoader.load(new File("").getAbsolutePath()+"/src/Laporan/laporan_barang_vDelta.jrxml");
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(query);
            
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint print = JasperFillManager.fillReport(jr, null,conn);
            
            //JasperPrintManager.printReport(print, false);
            JasperViewer viewer = new JasperViewer(print);
            System.out.println("sukses");
            jPanel2.removeAll();
            jPanel2.setLayout(new BorderLayout());
            jPanel2.repaint();
            jPanel2.add(new JRViewer(print));
////            show_report.repaint();
            jPanel2.revalidate();

        } catch (JRException ex) {
            Logger.getLogger(Laporan_Persediaan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laporan_Persediaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laporan_Persediaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laporan_Persediaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laporan_Persediaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Laporan_Persediaan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cekHJ1;
    private javax.swing.JCheckBox cekHJ2;
    private javax.swing.JCheckBox cekHPP;
    private javax.swing.JCheckBox cekKelompok;
    private javax.swing.JCheckBox cekQty;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
